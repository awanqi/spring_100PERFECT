<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">
<!--    包扫描-->
    <context:component-scan base-package="com">
    <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>
            <!-- 数据库连接池   -->
    <bean class="com.alibaba.druid.pool.DruidDataSource" id="dataSource">
        <property name="username" value="${user}"></property>
        <property name="password" value="${password}"></property>
        <property name="url" value="${url}"></property>
        <property name="driverClassName" value="${driverClassName}"></property>
        <property name="maxActive" value="${maxActive}"></property>
        <property name="initialSize" value="${initialSize}"></property>
    </bean>
<!--        整合spring+mybatis  用SqlSessionFactoryBean-->
        <bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">
            <!--   1 数据库连接池        -->
            <property name="dataSource" ref="dataSource"></property>
            <!--      2 加载mybatis核心配置文件     -->
            <property name="configLocation" value="classpath:mybatis-config.xml"></property>
            <!--      3  加载所有mapper。xml文件    -->
            <property name="mapperLocations" value="classpath:com/atguigu/mapper/*.xml"/>

        </bean>
            <!--     是把Mybatis中的Mapper接口都扫描到Spring容器中-->
            <mybatis:scan base-package="com.atguigu.Mapper"></mybatis:scan>


            <!--    事务管理器的配置-->
        <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="transactionManager">
        <property name="dataSource" ref="dataSource"></property>
         </bean>
    <!--事务属性 -->
    <tx:advice id="tx_advice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="*" read-only="true"/>
        </tx:attributes>
    </tx:advice>

        <!--    注解配合@transactional使用-->
        <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>

<!--    &lt;!&ndash;代理&ndash;&gt;-->
<!--    <aop:config>-->
<!--        <aop:advisor advice-ref="tx_advice"    -->
<!--                     pointcut="execution(public * com.atguigu..*Service*.*(..))"/>-->
<!--    </aop:config>-->

</beans>